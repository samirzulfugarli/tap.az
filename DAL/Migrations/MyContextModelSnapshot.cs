// <auto-generated />
using DAL.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entity.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Nəqliyyat"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "Ev və bağ"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Name = "Elektronika"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Name = "Dasinmaz Emlak"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            Name = "Sexsi esyalar"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Name = "Xidmetler ve Biznes"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            Name = "Hobbi ve asude"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            Name = "Usaq Alemi"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            Name = "Heyvanlar"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 10,
                            Name = "Is elanlari"
                        });
                });

            modelBuilder.Entity("Entity.Entities.MySite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MySites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Turbo.az"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bina.az"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Boss.az"
                        });
                });

            modelBuilder.Entity("Entity.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Key = "Admin",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Key = "User",
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Entity.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fullname = "Test",
                            Password = "Test1",
                            RoleId = 1,
                            Username = "Test1"
                        },
                        new
                        {
                            Id = 2,
                            Fullname = "Test2",
                            Password = "Test2",
                            RoleId = 2,
                            Username = "Test2"
                        });
                });

            modelBuilder.Entity("Entity.Entities.Category", b =>
                {
                    b.HasOne("Entity.Entities.Category", null)
                        .WithMany("Categories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.Entities.User", b =>
                {
                    b.HasOne("Entity.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Entity.Entities.Category", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
